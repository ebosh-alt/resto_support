import asyncio
from loguru import logger
from .scheduler import Scheduler

async def start_scheduler():
    logger.bind(name="scheduler_logger").warning("üõë Scheduler –∑–∞–ø—É—â–µ–Ω.")
    scheduler = Scheduler()
    try:
        await scheduler.start()
    except Exception as e:
        logger.bind(name="scheduler_logger").exception(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å APScheduler: {e}")

    backoff = 1
    while True:
        try:
            await scheduler.schedule_update()
            backoff = 1
        except Exception as e:
            logger.bind(name="scheduler_logger").exception(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∑–∞–¥–∞—á: {e}")
            await asyncio.sleep(backoff)
            backoff = min(backoff * 2, 60)
            continue

        # –µ—Å–ª–∏ –≤—Å—ë –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ, –ø—Ä–æ—Å—Ç–æ –∂–¥—ë–º —Ä–æ–≤–Ω–æ 60 —Å–µ–∫—É–Ω–¥
        await asyncio.sleep(60)


if __name__ == "__main__":
    try:
        asyncio.run(start_scheduler())
    except KeyboardInterrupt:
        logger.bind(name="scheduler_logger").warning("üõë Scheduler –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤—Ä—É—á–Ω—É—é.")
